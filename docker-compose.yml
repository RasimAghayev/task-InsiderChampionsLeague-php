name: "league"
networks:
  league:
    name: league

services:
  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: nginx_ts
    depends_on:
      - pgsql
      - php
#      - npmnx
    ports:
      - "${APP_PORT:-80}:80"
      - "${APP_PORT_SSL:-443}:443"
    env_file:
      - .env
    volumes:
      - ./:/var/www/html:delegated
      - ./.env:/var/www/html/.env:ro
    networks:
      - league

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: php_ts
    volumes:
      - ./:/var/www/html:delegated
      - ./.env:/var/www/html/.env
    env_file:
      - .env
    networks:
      - league

  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
    container_name: composer
    volumes:
      - ./:/var/www/html:delegated
      - ./.env:/var/www/html/.env:ro
    working_dir: /var/www/html
    env_file:
      - .env
    networks:
      - league

  phpunit:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: phpunit
    env_file:
      - .env
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["/var/www/html/vendor/bin/phpunit"]
    networks:
      - league

  pgsql:
    build:
      context: .
      dockerfile: postgres.dockerfile
    container_name: pgsql_ts
    restart: always
    shm_size: 128mb
    ports:
      - "6432:5432"
    volumes:
      - ./db/postgres:/var/lib/postgresql/data:delegated
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_DATABASE:-myapp}
      POSTGRES_USER: ${DB_USERNAME:-myapp}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-mypassword}
      PGDATA: /var/lib/postgresql/data/pgdata
    deploy:
       resources:
         limits:
           memory: 1G
         reservations:
           memory: 512M
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USERNAME:-myapp}", "-d", "${DB_DATABASE:-myapp}"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - league

#  npmnx:
#    build:
#      context: .
#      dockerfile: node.dockerfile
#    container_name: npmnx
#    restart: unless-stopped
#    env_file:
#      - .env
#    volumes:
#      - ./src/fe:/var/www/html/fe:delegated
#    ports:
#      - "5000:${FE_PORT:-3000}"
#    working_dir: /var/www/html/fe
#    environment:
#      - NODE_ENV=development
#    entrypoint: ["npm","run","dev"]
#    networks:
#      - league
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "10m"
#        max-file: "3"

#  npm:
#    image: node:current-alpine
#    container_name: npm
#    ports:
#      - 5173:5173
#    env_file:
#      - .env
#    volumes:
#      - ./src/fe:/var/www/html/fe:delegated
#    working_dir: /var/www/html/fe
#    networks:
#      - league

#  npx:
#    image: node:current-alpine
#    container_name: npx
#    env_file:
#      - .env
#    volumes:
#      - ./src/fe:/var/www/html/fe:delegated
#    working_dir: /var/www/html/fe
#    entrypoint: ["npx"]
#    networks:
#      - league
